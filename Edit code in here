#imports:
#!/usr/bin/env python3
import RPi.GPIO as GPIO
import time

#variables:
buzzTime = 0.5
beepTime = 0.5
distThreshold = 
tempThreshold = 


turnoverTime = 1 #time between loops

#setups:
vibratorPin =  11#whatever number pin it is in
distSensorPin = 35
passiveBuzzerPin = 40
tempSensorPin = 38

GPIO.setmode(GPIO.BOARD) 

def buzzSetup(pin):
		# Numbers GPIOs by physical location
	GPIO.setup(pin, GPIO.OUT)
	GPIO.output(pin, GPIO.HIGH)

def beepSetup(pin):
	GPIO.setup(pin, GPIO.OUT)
	GPIO.output(pin, GPIO.HIGH)

def motionSetup(pin):
	GPIO.setup(pin, GPIO.IN)

def tempSetup(pin):
	GPIO.setup(pin, GPIO.IN)
	


#vibrate code:
def buzzOn(): #vibrates
	GPIO.output(BuzzerPin, GPIO.LOW)

def buzzOff(): #stops vibrations
	GPIO.output(BuzzerPin, GPIO.HIGH)

def buzzRun(): #buzzes once for x amount of time
	on()
	time.sleep(buzzTime)
	off()

#beep code:
def beepOn(): #beeps
	GPIO.output(BuzzerPin, GPIO.LOW)

def beepOff(): #stops beeping
	GPIO.output(BuzzerPin, GPIO.HIGH)

def beepRun():
	on()
	time.sleep(beepTime)
	off()

#sensors run code:
buzzSetup(vibratorPin)
beepSetup(passiveBuzzerPin)
motionSetup(distSensorPin)
tempSetup(tempSensorPin)

while True:
	motion = GPIO.input(distSensorPin)
	if motion <= distThreshold:
		buzzRun()
	
	temp = GPIO.input(tempSensorPin)
	if temp >= tempThreshold:
		beepRun()
	
	time.sleep(turnoverTime)
